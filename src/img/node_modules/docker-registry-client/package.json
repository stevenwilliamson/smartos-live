{
  "name": "docker-registry-client",
  "version": "0.3.1",
  "description": "client for the docker Registry and Index APIs",
  "author": {
    "name": "Joyent",
    "url": "joyent.com"
  },
  "private": true,
  "main": "./lib/index.js",
  "dependencies": {
    "assert-plus": "^0.1.5",
    "bunyan": "^1.2.3",
    "restify": "^2.8.3",
    "vasync": "^1.6.1",
    "verror": "^1.4.0"
  },
  "engines": {
    "node": ">=0.10"
  },
  "keywords": [
    "docker",
    "client",
    "api",
    "registry",
    "index",
    "hub"
  ],
  "license": "MPL-2.0",
  "readme": "# node-docker-registry-client\n\nA docker registry client for node.js.\n*Warning:* this is beta.\nLimitation: Only some of the methods of each API are implemented.\n\ntl;dr: See the [Registry session](#registry-session) section below.\n\n\n## Intro\n\nThe \"Docker Regsitry\" docs are a somewhat confusing affair currently.\nThere are two APIs in play: the Index API (sometimes called the \"Hub API\")\nand the Registry API. There are a few auth-related endpoints and headers.\n\"Image\" is commonly used when referring to a repo. \"The Registry\" is\noften used when referring to the docker Hub/Index.\n\nThere is a single global index managed by Docker, Inc:\n<https://index.docker.io>, for which <https://hub.docker.com> is a web front\nend. Then there can be any number of registries. Currently the one\nmanaged by Docker, Inc. is at <https://registry-1.docker.io>.\n\nWorking with Docker images involves the following types of things:\n\n- index: The central place to find where a given repository of images is hosted\n  (i.e. what Registry API holds the image data).\n- repositories: Images are grouped into named `repos`, e.g.\n  [\"google/python\"](https://registry.hub.docker.com/u/google/python/),\n  [\"library/mongo\"](https://registry.hub.docker.com/u/library/mongo/).\n  Repos in the \"library\" `namespace` are official repos managed by Docker, Inc.\n  All the images (that is to say, the image *data*) in a given repository\n  are hosted by a single registry.\n- repository tags: A repository typically tags a set of its images with\n  short names, e.g. \"2.7\" in \"library/mongo:2.7\". Tags are commonly used in\n  the docker CLI when running containers. If a tag isn't specified the \"latest\"\n  tag is implied -- note that \"latest\" isn't necessarily the *latest* image.\n  Which image id a tag points to can change over time. The repository tags\n  mapping lives in the registry.\n- image ids: A globally unique 64-char hex string identifying a particular\n  image, e.g. \"3ce54e911389a2b08207b0a4d01c3131ce01b617ecc1c248f6d81ffdbebd628d\".\n  Typically this is abbreviated in client usage to 12 chars: \"3ce54e911389\".\n- layers: I'm using \"layer\" and \"image\" interchangeably.  Images are built up\n  in layers.  Each image has a parent, until the base layer. This chain\n  forms the \"history\" (see `docker history <image>`), aka \"ancestry\"\n  (see <https://docs.docker.com/reference/api/registry_api/#get-image-ancestry>).\n\nSome relevant links:\n\n- <https://docs.docker.com/reference/api/hub_registry_spec/>\n- <https://docs.docker.com/reference/api/registry_api/>\n- <https://docs.docker.com/reference/api/docker-io_api/>\n\n\n## Index client\n\nWhen you want to talk directly to the [Index\nAPI](https://docs.docker.com/reference/api/docker-io_api/).\n\n```javascript\nvar docker = require('docker-registry-client');\nvar idx = docker.createIndexClient();  // defaults to https://index.docker.io\nidx.listRepoImgs({repo: 'library/mongo'}, function (err, imgs, res) {\n    console.log('imgs:', imgs)\n    console.log('headers:', res.headers)\n});\n```\n\nSee [the source](./lib/index-client.js) for more details.\n\n\n## Registry client\n\nWhen you want to talk to unauthenticated endpoints of the\n[Registry API](https://docs.docker.com/reference/api/registry_api/).\n\n```javascript\nvar docker = require('docker-registry-client');\nvar reg = docker.createRegistryClient();  // default https://registry-1.docker.io\nreg.getStatus(function (err, body, res) {\n    console.log('status:', body);\n    console.log('HTTP status:', res.statusCode);\n});\n```\n\nSee [the source](./lib/registry-client.js) for more details.\n\nNote: Typical usage of the registry API is via a session as most endpoints\nrequire an authorization token. See the \"Registry session\" section below.\n\n\n## Registry session\n\nWhen you want to talk to *authenticated* endpoints of the\n[Registry API](https://docs.docker.com/reference/api/registry_api/).\nDev Note: This attempts to conform loosely to [session.go in docker\ncore](https://github.com/docker/docker/blob/master/registry/session.go).\n\n```javascript\nvar docker = require('docker-registry-client');\n\n// Creation of a session involves requesting a token from index.docker.io\n// and getting the registry endpoint URL from that response.\ndocker.createRegistrySession({repo: 'library/mongo'}, function (err, session) {\n    session.listRepoTags(function (err, tags) {\n        console.log('mongo image tags:', tags)\n    })\n});\n```\n\nSee [the source](./lib/registry-client.js) for more details.\n\n\n\n## Open Questions\n\n- Am I bastardizing the term \"image\" by calling each layer an image? Is it only\n  an \"image\" in Docker-land if it has a tag associated with it?\n\n- What are the validation rules for: repo namespaces, repo names, tags?\n\n- Why each of these auth endpoints?\n\n    - <https://docs.docker.com/reference/api/docker-io_api/#authorize-a-token-for-a-user-repository>\n    - X-Docker-Token:true to this endpoint: <https://docs.docker.com/reference/api/docker-io_api/#list-library-repository-images>\n      per discussion at <https://docs.docker.com/reference/api/hub_registry_spec/#pull>\n\n    - <https://docs.docker.com/reference/api/docker-io_api/#user-login>\n\n\n## Dev Notes\n\nFor naming this package attempts to consistently use `repo` for repository, `img` for\nimage, etc.\n",
  "readmeFilename": "README.md",
  "_id": "docker-registry-client@0.3.1",
  "_shasum": "795a9f6179300667779f99ea6bbfbb79ae7cc83e",
  "_resolved": "git://github.com/joyent/node-docker-registry-client.git#30f0a3dc2590d23359e3383bed0ed0545f31e138",
  "_from": "docker-registry-client@git://github.com/joyent/node-docker-registry-client.git#30f0a3d"
}
