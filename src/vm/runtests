#!/bin/bash

# All tests must pass!
set -o errexit

if [[ ! -f "/lib/sdc/.sdc-test-no-production-data" ]]; then
    cat <<EOF
To run this test you must create the file:

    /lib/sdc/.sdc-test-no-production-data

after ensuring you have no production data on this machine.
EOF
    exit 2
fi

start_time=$(date +%s)

if [[ $(uname -s) != 'SunOS' ]]; then
    echo "FATAL: this can only run on SmartOS"
    exit 1
fi

if [[ $(zonename) != 'global' ]]; then
    echo "FATAL: this can only run in the GZ"
    exit 1
fi

if [[ $(id -u) != 0 ]]; then
    echo "FATAL: this can only run as root"
    exit 1
fi

test_errors=0
failed_tests=

pwd=$(unset CDPATH; cd $(dirname $0); pwd)
for test in $(ls $pwd/tests | grep "\.js$"); do
    set +o errexit
    set -o pipefail
    (/usr/vm/test/runtest $pwd/tests/${test} 2>&1) > >(tee -a /tmp/test.output.$$)
    TEST_EXIT_CODE=$?
    set +o pipefail
    set -o errexit
    if [[ ${TEST_EXIT_CODE} != 0 ]]; then
        test_errors=$((${test_errors} + 1))
        failed_tests=$(printf "${pwd}/tests/${test}\n${failed_tests}")
    fi
done

end_time=$(date +%s)
elapsed=$((${end_time} - ${start_time}))

tests=$(grep "^# tests [0-9]" /tmp/test.output.$$ | cut -d ' ' -f3 | xargs | tr ' ' '+' | bc)
passed=$(grep "^# pass  [0-9]" /tmp/test.output.$$ | tr -s ' ' | cut -d ' ' -f3 | xargs | tr ' ' '+' | bc)
skipped=$(grep "^# skip  [0-9]" /tmp/test.output.$$ | tr -s ' ' | cut -d ' ' -f3 | xargs | tr ' ' '+' | bc)

[[ -z ${tests} ]] && tests=0
[[ -z ${passed} ]] && passed=0
[[ -z ${skipped} ]] && skipped=0

fail=$((${tests} - ${passed} - ${skipped}))

if [[ -t 0 ]]; then
    # We're on a terminal so output the summary
    echo "#"
    echo "# $1 TEST COMPLETE IN ${elapsed} SECONDS, SUMMARY:"
    echo "#"
    echo -e "# \033[32mPASS: ${passed} / ${tests}\033[39m"
    if [[ ${skipped} -gt 0 ]]; then
        echo -e "# \033[31mSKIP: ${skipped} / ${tests}\033[39m"
    fi
    if [[ ${fail} -gt 0 ]]; then
        echo -e "# \033[31mFAIL: ${fail} / ${tests}\033[39m"
    fi
    if [[ -n ${failed_tests} ]]; then
        echo "#"
        echo "#  ** FAILED TESTS **"
        for test in ${failed_tests}; do
            echo -e "#  \033[31m${test}\033[39m"
        done
    fi
    echo "#"
fi

if [[ ${fail} -gt 0 || ${test_errors} -gt 0 ]]; then
    exit 1
fi

exit 0
