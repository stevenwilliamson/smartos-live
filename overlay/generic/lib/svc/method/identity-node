#!/sbin/sh
#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
#
# Copyright (c) 1984, 1986, 1987, 1988, 1989 AT&T.
# All rights reserved.
#
#
# Copyright 2006 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#
# Copyright 2013 Joyent Inc. All rights reserved.
#
# ident "%Z%%M% %I% %E% SMI"

. /lib/svc/share/smf_include.sh
. /lib/svc/share/net_include.sh

set -o xtrace

# Make sure that the libraries essential to this stage of booting can be found.
LD_LIBRARY_PATH=/lib; export LD_LIBRARY_PATH

# Load sysinfo variables with SYSINFO_ prefix
# Note: since we're still starting up, "soft" values like network IP and such could
# not be set yet.

if smf_is_globalzone; then
  eval $(/usr/bin/sysinfo -p | sed -e "s/^/SYSINFO_/")
  if [[ -n ${SYSINFO_NIC_admin} ]]; then
      eval "admin_mac=\${SYSINFO_Network_Interface_${SYSINFO_NIC_admin}_MAC_Address}"
  fi
  if [[ -z ${admin_mac} ]]; then
      fallback_mac=$(set | grep "^SYSINFO_Network_Interface_.*_MAC_Address" | head -n1 | cut -d'=' -f2)
  fi
fi

# For a global zone, try to get a hostname in this order:
#   1. hostname=foo in the config file
#   2. the admin_mac address, which is the case we're configured, but no hostname specified
#   3. the fallback_mac (i.e. the first NIC MAC address, above), which is when we're in 
#      unconfigured mode and 
#   4. "unknown" <- not sure how this would end up, presumably if the host had no NICs
#
#
# For a non-global zone:
#   1. the contents of /etc/nodename
#   2. uname -n (which is the zone's UUID)

if smf_is_globalzone; then

    ## Global zone

    configfile="$(svcprop -p 'joyentfs/usb_copy_path' svc:/system/filesystem/smartdc:default)/config"
    hostname=$(grep '^hostname=' ${configfile} | cut -d'=' -f2-)
    if [[ -z ${hostname} ]]; then
        if [[ -n ${admin_mac} ]]; then
            hostname=$(echo "${admin_mac}" | tr ':' '-')
        elif [[ -n ${fallback_mac} ]]; then
            hostname=$(echo "${fallback_mac}" | tr ':' '-')
        else
            hostname="unknown"
        fi
    fi
else

    ## Non global zone.
    hostname="`shcat /etc/nodename 2>/dev/null`"
    if [[ -z ${hostname} ]]; then
        hostname=`/sbin/uname -n`
    fi
fi

# Set the hostname
/sbin/uname -S $hostname

# Reloading sysinfo here serves two purposes:
#   - getting the IP info (which should exist now)
#   - updating the host info (which we just set)
eval $(/usr/bin/sysinfo -f -p | sed -e "s/^/SYSINFO_/")

# Try to add the /etc/hosts entry if we can find an IP
if [[ -n ${SYSINFO_NIC_admin} ]]; then
    eval "ipaddr=\${SYSINFO_Network_Interface_${SYSINFO_NIC_admin}_IPv4_Address}"
fi
if [[ -z ${ipaddr} ]]; then
    ipaddr=$(set | grep "^SYSINFO_Network_Interface_.*_IPv4_Address" | head -n1 | cut -d'=' -f2)
fi
if [[ -n ${ipaddr} ]]; then
    printf "${ipaddr}\t${hostname}\t${hostname}.local\n" >> /etc/hosts
fi

# Reset the library path now that we are past the critical stage
unset LD_LIBRARY_PATH

exit $SMF_EXIT_OK
